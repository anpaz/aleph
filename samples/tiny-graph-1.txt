==> Starting resources estimation...

edgesSet (set [Tuple [Int 0; Int 1]; Tuple [Int 0; Int 2]; Tuple [Int 0; Int 3]])
[Q#] Ket.All::Init --> size: 1; output: [Register(1..1..1)]
[Q#] Ket.All::Init --> size: 1; output: [Register(2..1..2)]
[Q#] Ket.All::Init --> size: 1; output: [Register(3..1..3)]
[Q#] Ket.All::Init --> size: 1; output: [Register(4..1..4)]
[Q#] Ket.Equals::Init --> left: Register(1..1..1); right: Register(3..1..3); output: [Register(5..1..5)]
[Q#] Ket.Not::Init --> source: Register(5..1..5); output: [Register(6..1..6)]
[Q#] Ket.Equals::Init --> left: Register(1..1..1); right: Register(2..1..2); output: [Register(7..1..7)]
[Q#] Ket.Not::Init --> source: Register(7..1..7); output: [Register(8..1..8)]
[Q#] Ket.Equals::Init --> left: Register(1..1..1); right: Register(4..1..4); output: [Register(9..1..9)]
[Q#] Ket.Not::Init --> source: Register(9..1..9); output: [Register(10..1..10)]
[Q#] Ket.And::Init --> left: Register(8..1..8); right: Register(10..1..10); output: [Register(11..1..11)]
[Q#] Ket.And::Init --> left: Register(6..1..6); right: Register(11..1..11); output: [Register(12..1..12)]
[Q#] Ket.Filter::Init --> cond: Register(12..1..12)
[Q#] Starting 25 iterations for 13 qubits with 8 answers
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Starting 25 iterations for 13 qubits with 8 answers
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Starting 25 iterations for 13 qubits with 8 answers
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10

result: Tuple [Bool false; Bool false; Bool false; Bool false]

==> Estimated resources:
  - Qubits: 32
  - Depth: 32625
==> Saving circuit... done.
==> Starting quantum execution...
edgesSet (set [Tuple [Int 0; Int 1]; Tuple [Int 0; Int 2]; Tuple [Int 0; Int 3]])
[Q#] Ket.All::Init --> size: 1; output: [Register(1..1..1)]
[Q#] Ket.All::Init --> size: 1; output: [Register(2..1..2)]
[Q#] Ket.All::Init --> size: 1; output: [Register(3..1..3)]
[Q#] Ket.All::Init --> size: 1; output: [Register(4..1..4)]
[Q#] Ket.Equals::Init --> left: Register(1..1..1); right: Register(4..1..4); output: [Register(5..1..5)]
[Q#] Ket.Not::Init --> source: Register(5..1..5); output: [Register(6..1..6)]
[Q#] Ket.Equals::Init --> left: Register(1..1..1); right: Register(2..1..2); output: [Register(7..1..7)]
[Q#] Ket.Not::Init --> source: Register(7..1..7); output: [Register(8..1..8)]
[Q#] Ket.Equals::Init --> left: Register(1..1..1); right: Register(3..1..3); output: [Register(9..1..9)]
[Q#] Ket.Not::Init --> source: Register(9..1..9); output: [Register(10..1..10)]
[Q#] Ket.And::Init --> left: Register(8..1..8); right: Register(10..1..10); output: [Register(11..1..11)]
[Q#] Ket.And::Init --> left: Register(6..1..6); right: Register(11..1..11); output: [Register(12..1..12)]
[Q#] Ket.Filter::Init --> cond: Register(12..1..12)
[Q#] Starting 25 iterations for 13 qubits with 8 answers
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Starting 25 iterations for 13 qubits with 8 answers
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10
[Q#] Universe::uber-oracle --> rows: 8; columns: 13; oracles count: 10

result: Tuple [Bool false; Bool true; Bool true; Bool true]

:ℵ-0.5:
